export const UNIVERSAL_GATEWAY_V0 = [
  { type: 'receive', stateMutability: 'payable' },
  {
    type: 'function',
    name: 'DEFAULT_ADMIN_ROLE',
    inputs: [],
    outputs: [{ name: '', type: 'bytes32', internalType: 'bytes32' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'MAX_CAP_UNIVERSAL_TX_USD',
    inputs: [],
    outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'MIN_CAP_UNIVERSAL_TX_USD',
    inputs: [],
    outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'PAUSER_ROLE',
    inputs: [],
    outputs: [{ name: '', type: 'bytes32', internalType: 'bytes32' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'POOL_FEE',
    inputs: [],
    outputs: [{ name: '', type: 'uint24', internalType: 'uint24' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'TSS_ROLE',
    inputs: [],
    outputs: [{ name: '', type: 'bytes32', internalType: 'bytes32' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'USDT',
    inputs: [],
    outputs: [{ name: '', type: 'address', internalType: 'address' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'WETH',
    inputs: [],
    outputs: [{ name: '', type: 'address', internalType: 'address' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: '_checkUSDCaps',
    inputs: [{ name: 'amount', type: 'uint256', internalType: 'uint256' }],
    outputs: [],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'addFunds',
    inputs: [
      {
        name: '_transactionHash',
        type: 'bytes32',
        internalType: 'bytes32',
      },
    ],
    outputs: [],
    stateMutability: 'payable',
  },
  {
    type: 'function',
    name: 'chainlinkEthUsdDecimals',
    inputs: [],
    outputs: [{ name: '', type: 'uint8', internalType: 'uint8' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'chainlinkStalePeriod',
    inputs: [],
    outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'defaultSwapDeadlineSec',
    inputs: [],
    outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'ethUsdFeed',
    inputs: [],
    outputs: [
      {
        name: '',
        type: 'address',
        internalType: 'contract AggregatorV3Interface',
      },
    ],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'getEthUsdPrice',
    inputs: [],
    outputs: [
      { name: '', type: 'uint256', internalType: 'uint256' },
      { name: '', type: 'uint8', internalType: 'uint8' },
    ],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'getEthUsdPrice_old',
    inputs: [],
    outputs: [
      { name: '', type: 'uint256', internalType: 'uint256' },
      { name: '', type: 'uint8', internalType: 'uint8' },
    ],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'getMinMaxValueForNative',
    inputs: [],
    outputs: [
      { name: 'minValue', type: 'uint256', internalType: 'uint256' },
      { name: 'maxValue', type: 'uint256', internalType: 'uint256' },
    ],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'getRoleAdmin',
    inputs: [{ name: 'role', type: 'bytes32', internalType: 'bytes32' }],
    outputs: [{ name: '', type: 'bytes32', internalType: 'bytes32' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'grantRole',
    inputs: [
      { name: 'role', type: 'bytes32', internalType: 'bytes32' },
      { name: 'account', type: 'address', internalType: 'address' },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'hasRole',
    inputs: [
      { name: 'role', type: 'bytes32', internalType: 'bytes32' },
      { name: 'account', type: 'address', internalType: 'address' },
    ],
    outputs: [{ name: '', type: 'bool', internalType: 'bool' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'initialize',
    inputs: [
      { name: 'admin', type: 'address', internalType: 'address' },
      { name: 'pauser', type: 'address', internalType: 'address' },
      { name: 'tss', type: 'address', internalType: 'address' },
      { name: 'minCapUsd', type: 'uint256', internalType: 'uint256' },
      { name: 'maxCapUsd', type: 'uint256', internalType: 'uint256' },
      { name: 'factory', type: 'address', internalType: 'address' },
      { name: 'router', type: 'address', internalType: 'address' },
      {
        name: '_wethAddress',
        type: 'address',
        internalType: 'address',
      },
      {
        name: '_usdtAddress',
        type: 'address',
        internalType: 'address',
      },
      {
        name: '_usdtUsdPriceFeed',
        type: 'address',
        internalType: 'address',
      },
      {
        name: '_ethUsdPriceFeed',
        type: 'address',
        internalType: 'address',
      },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'isSupportedToken',
    inputs: [{ name: '', type: 'address', internalType: 'address' }],
    outputs: [{ name: '', type: 'bool', internalType: 'bool' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'l2SequencerFeed',
    inputs: [],
    outputs: [
      {
        name: '',
        type: 'address',
        internalType: 'contract AggregatorV3Interface',
      },
    ],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'l2SequencerGracePeriodSec',
    inputs: [],
    outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'modifySupportForToken',
    inputs: [
      { name: 'tokens', type: 'address[]', internalType: 'address[]' },
      { name: 'isSupported', type: 'bool[]', internalType: 'bool[]' },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'pause',
    inputs: [],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'paused',
    inputs: [],
    outputs: [{ name: '', type: 'bool', internalType: 'bool' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'quoteEthAmountInUsd1e18',
    inputs: [{ name: 'amountWei', type: 'uint256', internalType: 'uint256' }],
    outputs: [{ name: 'usd1e18', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'renounceRole',
    inputs: [
      { name: 'role', type: 'bytes32', internalType: 'bytes32' },
      {
        name: 'callerConfirmation',
        type: 'address',
        internalType: 'address',
      },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'revertWithdrawFunds',
    inputs: [
      { name: 'token', type: 'address', internalType: 'address' },
      { name: 'amount', type: 'uint256', internalType: 'uint256' },
      {
        name: 'revertInstruction',
        type: 'tuple',
        internalType: 'struct RevertInstructions',
        components: [
          {
            name: 'fundRecipient',
            type: 'address',
            internalType: 'address',
          },
          { name: 'revertMsg', type: 'bytes', internalType: 'bytes' },
        ],
      },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'revokeRole',
    inputs: [
      { name: 'role', type: 'bytes32', internalType: 'bytes32' },
      { name: 'account', type: 'address', internalType: 'address' },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'sendFunds',
    inputs: [
      { name: 'recipient', type: 'address', internalType: 'address' },
      { name: 'bridgeToken', type: 'address', internalType: 'address' },
      {
        name: 'bridgeAmount',
        type: 'uint256',
        internalType: 'uint256',
      },
      {
        name: 'revertInstruction',
        type: 'tuple',
        internalType: 'struct RevertInstructions',
        components: [
          {
            name: 'fundRecipient',
            type: 'address',
            internalType: 'address',
          },
          { name: 'revertMsg', type: 'bytes', internalType: 'bytes' },
        ],
      },
    ],
    outputs: [],
    stateMutability: 'payable',
  },
  {
    type: 'function',
    name: 'sendTxWithFunds',
    inputs: [
      { name: 'bridgeToken', type: 'address', internalType: 'address' },
      {
        name: 'bridgeAmount',
        type: 'uint256',
        internalType: 'uint256',
      },
      { name: 'gasToken', type: 'address', internalType: 'address' },
      { name: 'gasAmount', type: 'uint256', internalType: 'uint256' },
      {
        name: 'amountOutMinETH',
        type: 'uint256',
        internalType: 'uint256',
      },
      { name: 'deadline', type: 'uint256', internalType: 'uint256' },
      {
        name: 'payload',
        type: 'tuple',
        internalType: 'struct UniversalPayload',
        components: [
          { name: 'to', type: 'address', internalType: 'address' },
          { name: 'value', type: 'uint256', internalType: 'uint256' },
          { name: 'data', type: 'bytes', internalType: 'bytes' },
          {
            name: 'gasLimit',
            type: 'uint256',
            internalType: 'uint256',
          },
          {
            name: 'maxFeePerGas',
            type: 'uint256',
            internalType: 'uint256',
          },
          {
            name: 'maxPriorityFeePerGas',
            type: 'uint256',
            internalType: 'uint256',
          },
          { name: 'nonce', type: 'uint256', internalType: 'uint256' },
          {
            name: 'deadline',
            type: 'uint256',
            internalType: 'uint256',
          },
          {
            name: 'vType',
            type: 'uint8',
            internalType: 'enum VerificationType',
          },
        ],
      },
      {
        name: 'revertInstruction',
        type: 'tuple',
        internalType: 'struct RevertInstructions',
        components: [
          {
            name: 'fundRecipient',
            type: 'address',
            internalType: 'address',
          },
          { name: 'revertMsg', type: 'bytes', internalType: 'bytes' },
        ],
      },
      { name: 'signatureData', type: 'bytes', internalType: 'bytes' },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'sendTxWithFunds',
    inputs: [
      { name: 'bridgeToken', type: 'address', internalType: 'address' },
      {
        name: 'bridgeAmount',
        type: 'uint256',
        internalType: 'uint256',
      },
      {
        name: 'payload',
        type: 'tuple',
        internalType: 'struct UniversalPayload',
        components: [
          { name: 'to', type: 'address', internalType: 'address' },
          { name: 'value', type: 'uint256', internalType: 'uint256' },
          { name: 'data', type: 'bytes', internalType: 'bytes' },
          {
            name: 'gasLimit',
            type: 'uint256',
            internalType: 'uint256',
          },
          {
            name: 'maxFeePerGas',
            type: 'uint256',
            internalType: 'uint256',
          },
          {
            name: 'maxPriorityFeePerGas',
            type: 'uint256',
            internalType: 'uint256',
          },
          { name: 'nonce', type: 'uint256', internalType: 'uint256' },
          {
            name: 'deadline',
            type: 'uint256',
            internalType: 'uint256',
          },
          {
            name: 'vType',
            type: 'uint8',
            internalType: 'enum VerificationType',
          },
        ],
      },
      {
        name: 'revertInstruction',
        type: 'tuple',
        internalType: 'struct RevertInstructions',
        components: [
          {
            name: 'fundRecipient',
            type: 'address',
            internalType: 'address',
          },
          { name: 'revertMsg', type: 'bytes', internalType: 'bytes' },
        ],
      },
      { name: 'signatureData', type: 'bytes', internalType: 'bytes' },
    ],
    outputs: [],
    stateMutability: 'payable',
  },
  {
    type: 'function',
    name: 'sendTxWithGas',
    inputs: [
      {
        name: 'payload',
        type: 'tuple',
        internalType: 'struct UniversalPayload',
        components: [
          { name: 'to', type: 'address', internalType: 'address' },
          { name: 'value', type: 'uint256', internalType: 'uint256' },
          { name: 'data', type: 'bytes', internalType: 'bytes' },
          {
            name: 'gasLimit',
            type: 'uint256',
            internalType: 'uint256',
          },
          {
            name: 'maxFeePerGas',
            type: 'uint256',
            internalType: 'uint256',
          },
          {
            name: 'maxPriorityFeePerGas',
            type: 'uint256',
            internalType: 'uint256',
          },
          { name: 'nonce', type: 'uint256', internalType: 'uint256' },
          {
            name: 'deadline',
            type: 'uint256',
            internalType: 'uint256',
          },
          {
            name: 'vType',
            type: 'uint8',
            internalType: 'enum VerificationType',
          },
        ],
      },
      {
        name: 'revertInstruction',
        type: 'tuple',
        internalType: 'struct RevertInstructions',
        components: [
          {
            name: 'fundRecipient',
            type: 'address',
            internalType: 'address',
          },
          { name: 'revertMsg', type: 'bytes', internalType: 'bytes' },
        ],
      },
      {
        name: 'signatureData',
        type: 'bytes',
        internalType: 'bytes',
      },
    ],
    outputs: [],
    stateMutability: 'payable',
  },
  {
    type: 'function',
    name: 'sendTxWithGas',
    inputs: [
      { name: 'tokenIn', type: 'address', internalType: 'address' },
      { name: 'amountIn', type: 'uint256', internalType: 'uint256' },
      {
        name: 'payload',
        type: 'tuple',
        internalType: 'struct UniversalPayload',
        components: [
          { name: 'to', type: 'address', internalType: 'address' },
          { name: 'value', type: 'uint256', internalType: 'uint256' },
          { name: 'data', type: 'bytes', internalType: 'bytes' },
          {
            name: 'gasLimit',
            type: 'uint256',
            internalType: 'uint256',
          },
          {
            name: 'maxFeePerGas',
            type: 'uint256',
            internalType: 'uint256',
          },
          {
            name: 'maxPriorityFeePerGas',
            type: 'uint256',
            internalType: 'uint256',
          },
          { name: 'nonce', type: 'uint256', internalType: 'uint256' },
          {
            name: 'deadline',
            type: 'uint256',
            internalType: 'uint256',
          },
          {
            name: 'vType',
            type: 'uint8',
            internalType: 'enum VerificationType',
          },
        ],
      },
      {
        name: 'revertInstruction',
        type: 'tuple',
        internalType: 'struct RevertInstructions',
        components: [
          {
            name: 'fundRecipient',
            type: 'address',
            internalType: 'address',
          },
          { name: 'revertMsg', type: 'bytes', internalType: 'bytes' },
        ],
      },
      {
        name: 'amountOutMinETH',
        type: 'uint256',
        internalType: 'uint256',
      },
      { name: 'deadline', type: 'uint256', internalType: 'uint256' },
      {
        name: 'signatureData',
        type: 'bytes',
        internalType: 'bytes',
      },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'setCapsUSD',
    inputs: [
      { name: 'minCapUsd', type: 'uint256', internalType: 'uint256' },
      { name: 'maxCapUsd', type: 'uint256', internalType: 'uint256' },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'setChainlinkStalePeriod',
    inputs: [
      {
        name: 'stalePeriodSec',
        type: 'uint256',
        internalType: 'uint256',
      },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'setDefaultSwapDeadline',
    inputs: [{ name: 'deadlineSec', type: 'uint256', internalType: 'uint256' }],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'setEthUsdFeed',
    inputs: [{ name: 'feed', type: 'address', internalType: 'address' }],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'setL2SequencerFeed',
    inputs: [{ name: 'feed', type: 'address', internalType: 'address' }],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'setL2SequencerGracePeriod',
    inputs: [
      {
        name: 'gracePeriodSec',
        type: 'uint256',
        internalType: 'uint256',
      },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'setRouters',
    inputs: [
      { name: 'factory', type: 'address', internalType: 'address' },
      { name: 'router', type: 'address', internalType: 'address' },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'setTSSAddress',
    inputs: [{ name: 'newTSS', type: 'address', internalType: 'address' }],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'setV3FeeOrder',
    inputs: [
      { name: 'a', type: 'uint24', internalType: 'uint24' },
      { name: 'b', type: 'uint24', internalType: 'uint24' },
      { name: 'c', type: 'uint24', internalType: 'uint24' },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'supportsInterface',
    inputs: [{ name: 'interfaceId', type: 'bytes4', internalType: 'bytes4' }],
    outputs: [{ name: '', type: 'bool', internalType: 'bool' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'tssAddress',
    inputs: [],
    outputs: [{ name: '', type: 'address', internalType: 'address' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'uniV3Factory',
    inputs: [],
    outputs: [
      {
        name: '',
        type: 'address',
        internalType: 'contract IUniswapV3Factory',
      },
    ],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'uniV3Router',
    inputs: [],
    outputs: [
      {
        name: '',
        type: 'address',
        internalType: 'contract ISwapRouterSepolia',
      },
    ],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'unpause',
    inputs: [],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'usdtUsdPriceFeed',
    inputs: [],
    outputs: [
      {
        name: '',
        type: 'address',
        internalType: 'contract AggregatorV3Interface',
      },
    ],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'v3FeeOrder',
    inputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    outputs: [{ name: '', type: 'uint24', internalType: 'uint24' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'version',
    inputs: [],
    outputs: [{ name: '', type: 'string', internalType: 'string' }],
    stateMutability: 'pure',
  },
  {
    type: 'function',
    name: 'withdrawFunds',
    inputs: [
      { name: 'recipient', type: 'address', internalType: 'address' },
      { name: 'token', type: 'address', internalType: 'address' },
      { name: 'amount', type: 'uint256', internalType: 'uint256' },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'event',
    name: 'CapsUpdated',
    inputs: [
      {
        name: 'minCapUsd',
        type: 'uint256',
        indexed: false,
        internalType: 'uint256',
      },
      {
        name: 'maxCapUsd',
        type: 'uint256',
        indexed: false,
        internalType: 'uint256',
      },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'ChainlinkEthUsdFeedUpdated',
    inputs: [
      {
        name: 'feed',
        type: 'address',
        indexed: true,
        internalType: 'address',
      },
      {
        name: 'decimals',
        type: 'uint8',
        indexed: false,
        internalType: 'uint8',
      },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'ChainlinkStalePeriodUpdated',
    inputs: [
      {
        name: 'stalePeriodSec',
        type: 'uint256',
        indexed: false,
        internalType: 'uint256',
      },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'DefaultSwapDeadlineUpdated',
    inputs: [
      {
        name: 'deadlineSec',
        type: 'uint256',
        indexed: false,
        internalType: 'uint256',
      },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'FundsAdded',
    inputs: [
      {
        name: 'user',
        type: 'address',
        indexed: true,
        internalType: 'address',
      },
      {
        name: 'transactionHash',
        type: 'bytes32',
        indexed: true,
        internalType: 'bytes32',
      },
      {
        name: 'AmountInUSD',
        type: 'tuple',
        indexed: false,
        internalType: 'struct UniversalGatewayV0.AmountInUSD',
        components: [
          {
            name: 'amountInUSD',
            type: 'uint256',
            internalType: 'uint256',
          },
          { name: 'decimals', type: 'uint8', internalType: 'uint8' },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'Initialized',
    inputs: [
      {
        name: 'version',
        type: 'uint64',
        indexed: false,
        internalType: 'uint64',
      },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'L2SequencerFeedUpdated',
    inputs: [
      {
        name: 'feed',
        type: 'address',
        indexed: true,
        internalType: 'address',
      },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'L2SequencerGracePeriodUpdated',
    inputs: [
      {
        name: 'gracePeriodSec',
        type: 'uint256',
        indexed: false,
        internalType: 'uint256',
      },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'Paused',
    inputs: [
      {
        name: 'account',
        type: 'address',
        indexed: false,
        internalType: 'address',
      },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'RoleAdminChanged',
    inputs: [
      {
        name: 'role',
        type: 'bytes32',
        indexed: true,
        internalType: 'bytes32',
      },
      {
        name: 'previousAdminRole',
        type: 'bytes32',
        indexed: true,
        internalType: 'bytes32',
      },
      {
        name: 'newAdminRole',
        type: 'bytes32',
        indexed: true,
        internalType: 'bytes32',
      },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'RoleGranted',
    inputs: [
      {
        name: 'role',
        type: 'bytes32',
        indexed: true,
        internalType: 'bytes32',
      },
      {
        name: 'account',
        type: 'address',
        indexed: true,
        internalType: 'address',
      },
      {
        name: 'sender',
        type: 'address',
        indexed: true,
        internalType: 'address',
      },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'RoleRevoked',
    inputs: [
      {
        name: 'role',
        type: 'bytes32',
        indexed: true,
        internalType: 'bytes32',
      },
      {
        name: 'account',
        type: 'address',
        indexed: true,
        internalType: 'address',
      },
      {
        name: 'sender',
        type: 'address',
        indexed: true,
        internalType: 'address',
      },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'TSSAddressUpdated',
    inputs: [
      {
        name: 'oldTSS',
        type: 'address',
        indexed: false,
        internalType: 'address',
      },
      {
        name: 'newTSS',
        type: 'address',
        indexed: false,
        internalType: 'address',
      },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'TokenSupportModified',
    inputs: [
      {
        name: 'tokenAddress',
        type: 'address',
        indexed: false,
        internalType: 'address',
      },
      {
        name: 'whitelistStatus',
        type: 'bool',
        indexed: false,
        internalType: 'bool',
      },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'UniversalTx',
    inputs: [
      {
        name: 'sender',
        type: 'address',
        indexed: true,
        internalType: 'address',
      },
      {
        name: 'recipient',
        type: 'address',
        indexed: true,
        internalType: 'address',
      },
      {
        name: 'token',
        type: 'address',
        indexed: false,
        internalType: 'address',
      },
      {
        name: 'amount',
        type: 'uint256',
        indexed: false,
        internalType: 'uint256',
      },
      {
        name: 'payload',
        type: 'bytes',
        indexed: false,
        internalType: 'bytes',
      },
      {
        name: 'revertInstruction',
        type: 'tuple',
        indexed: false,
        internalType: 'struct RevertInstructions',
        components: [
          {
            name: 'fundRecipient',
            type: 'address',
            internalType: 'address',
          },
          { name: 'revertMsg', type: 'bytes', internalType: 'bytes' },
        ],
      },
      {
        name: 'txType',
        type: 'uint8',
        indexed: false,
        internalType: 'enum TX_TYPE',
      },
      {
        name: 'signatureData',
        type: 'bytes',
        indexed: false,
        internalType: 'bytes',
      },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'Unpaused',
    inputs: [
      {
        name: 'account',
        type: 'address',
        indexed: false,
        internalType: 'address',
      },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'WithdrawFunds',
    inputs: [
      {
        name: 'recipient',
        type: 'address',
        indexed: true,
        internalType: 'address',
      },
      {
        name: 'amount',
        type: 'uint256',
        indexed: false,
        internalType: 'uint256',
      },
      {
        name: 'tokenAddress',
        type: 'address',
        indexed: false,
        internalType: 'address',
      },
    ],
    anonymous: false,
  },
  { type: 'error', name: 'AccessControlBadConfirmation', inputs: [] },
  {
    type: 'error',
    name: 'AccessControlUnauthorizedAccount',
    inputs: [
      { name: 'account', type: 'address', internalType: 'address' },
      { name: 'neededRole', type: 'bytes32', internalType: 'bytes32' },
    ],
  },
  { type: 'error', name: 'DepositFailed', inputs: [] },
  { type: 'error', name: 'EnforcedPause', inputs: [] },
  { type: 'error', name: 'ExpectedPause', inputs: [] },
  { type: 'error', name: 'InvalidAmount', inputs: [] },
  { type: 'error', name: 'InvalidCapRange', inputs: [] },
  { type: 'error', name: 'InvalidData', inputs: [] },
  { type: 'error', name: 'InvalidInitialization', inputs: [] },
  { type: 'error', name: 'InvalidInput', inputs: [] },
  { type: 'error', name: 'InvalidRecipient', inputs: [] },
  { type: 'error', name: 'InvalidTxType', inputs: [] },
  { type: 'error', name: 'NotInitializing', inputs: [] },
  { type: 'error', name: 'NotSupported', inputs: [] },
  { type: 'error', name: 'ReentrancyGuardReentrantCall', inputs: [] },
  {
    type: 'error',
    name: 'SafeERC20FailedOperation',
    inputs: [{ name: 'token', type: 'address', internalType: 'address' }],
  },
  { type: 'error', name: 'SlippageExceededOrExpired', inputs: [] },
  { type: 'error', name: 'WithdrawFailed', inputs: [] },
  { type: 'error', name: 'ZeroAddress', inputs: [] },
];
